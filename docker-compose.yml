services:
  # Database service
  postgres:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nextflow_platform
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./pipeline:/app/pipeline
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/nextflow_platform
      - SECRET_KEY=local_development_secret_key_change_in_production
      - AWS_REGION=us-west-2
      - S3_BUCKET=nextflow-data-local
      - ENVIRONMENT=development
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development
      - NODE_OPTIONS=--no-deprecation
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm start

  # Nextflow runner - for local execution of workflows
  nextflow:
    image: nextflow/nextflow:22.10.6
    volumes:
      - ./pipeline:/pipeline
      - nextflow_work:/work
      - nextflow_tmp:/tmp
    working_dir: /pipeline
    environment:
      - NXF_ANSI_LOG=false
      - NXF_OPTS="-Xms500M -Xmx2G"
    command: tail -f /dev/null

volumes:
  postgres_data:
  nextflow_work:
  nextflow_tmp:
